-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Cambiatus.Scalar exposing (Codecs, Date(..), DateTime(..), Id(..), NaiveDateTime(..), defaultCodecs, defineCodecs, unwrapCodecs, unwrapEncoder)

import Graphql.Codec exposing (Codec)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode
import Json.Decode as Decode exposing (Decoder)
import Json.Encode as Encode


type Date
    = Date String


type DateTime
    = DateTime String


type Id
    = Id String


type NaiveDateTime
    = NaiveDateTime String


defineCodecs :
    { codecDate : Codec valueDate
    , codecDateTime : Codec valueDateTime
    , codecId : Codec valueId
    , codecNaiveDateTime : Codec valueNaiveDateTime
    }
    -> Codecs valueDate valueDateTime valueId valueNaiveDateTime
defineCodecs definitions =
    Codecs definitions


unwrapCodecs :
    Codecs valueDate valueDateTime valueId valueNaiveDateTime
    ->
        { codecDate : Codec valueDate
        , codecDateTime : Codec valueDateTime
        , codecId : Codec valueId
        , codecNaiveDateTime : Codec valueNaiveDateTime
        }
unwrapCodecs (Codecs unwrappedCodecs) =
    unwrappedCodecs


unwrapEncoder getter (Codecs unwrappedCodecs) =
    (unwrappedCodecs |> getter |> .encoder) >> Graphql.Internal.Encode.fromJson


type Codecs valueDate valueDateTime valueId valueNaiveDateTime
    = Codecs (RawCodecs valueDate valueDateTime valueId valueNaiveDateTime)


type alias RawCodecs valueDate valueDateTime valueId valueNaiveDateTime =
    { codecDate : Codec valueDate
    , codecDateTime : Codec valueDateTime
    , codecId : Codec valueId
    , codecNaiveDateTime : Codec valueNaiveDateTime
    }


defaultCodecs : RawCodecs Date DateTime Id NaiveDateTime
defaultCodecs =
    { codecDate =
        { encoder = \(Date raw) -> Encode.string raw
        , decoder = Object.scalarDecoder |> Decode.map Date
        }
    , codecDateTime =
        { encoder = \(DateTime raw) -> Encode.string raw
        , decoder = Object.scalarDecoder |> Decode.map DateTime
        }
    , codecId =
        { encoder = \(Id raw) -> Encode.string raw
        , decoder = Object.scalarDecoder |> Decode.map Id
        }
    , codecNaiveDateTime =
        { encoder = \(NaiveDateTime raw) -> Encode.string raw
        , decoder = Object.scalarDecoder |> Decode.map NaiveDateTime
        }
    }
