-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Cambiatus.Enum.VerificationType exposing (..)

import Json.Decode as Decode exposing (Decoder)


{-| Action verification types

  - Automatic - An action that is verified automatically
  - Claimable - An action that needs be mannually verified

-}
type VerificationType
    = Automatic
    | Claimable


list : List VerificationType
list =
    [ Automatic, Claimable ]


decoder : Decoder VerificationType
decoder =
    Decode.string
        |> Decode.andThen
            (\string ->
                case string of
                    "AUTOMATIC" ->
                        Decode.succeed Automatic

                    "CLAIMABLE" ->
                        Decode.succeed Claimable

                    _ ->
                        Decode.fail ("Invalid VerificationType type, " ++ string ++ " try re-running the @dillonkearns/elm-graphql CLI ")
            )


{-| Convert from the union type representing the Enum to a string that the GraphQL server will recognize.
-}
toString : VerificationType -> String
toString enum =
    case enum of
        Automatic ->
            "AUTOMATIC"

        Claimable ->
            "CLAIMABLE"


{-| Convert from a String representation to an elm representation enum.
This is the inverse of the Enum `toString` function. So you can call `toString` and then convert back `fromString` safely.

    Swapi.Enum.Episode.NewHope
        |> Swapi.Enum.Episode.toString
        |> Swapi.Enum.Episode.fromString
        == Just NewHope

This can be useful for generating Strings to use for <select> menus to check which item was selected.

-}
fromString : String -> Maybe VerificationType
fromString enumString =
    case enumString of
        "AUTOMATIC" ->
            Just Automatic

        "CLAIMABLE" ->
            Just Claimable

        _ ->
            Nothing
